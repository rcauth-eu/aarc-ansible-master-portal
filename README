###############################################################################
Ansible Deploy Script for Master Portal
###############################################################################


What are these scripts for?
-------------------------------------------------------------------------------

These scripts are for deploying a Master Portal + Credential Store + SSH host.
To find out more about what this setup is useful for take a look at:
https://wiki.nikhef.nl/grid/CILogon_Pre-Pilot_Work . You can use these scripts
to deploy a Master Portal, Credential Store and SSH host on different hosts, or
into one single host. 
Note: the SSH interface consists of 3 parts:
- MasterPortal: an API inside the mp-oa2-server, consisting of two endpoints.
  Managed via roles/masterportal/templates/ssl.conf.j2
- SSH Key portal: like the VO portal, co-hosted a separate TomCat servlet.
  Managed via roles/masterportal/tasks/sshkey-portal.yml and dep-tomcat.yml
- SSH host: typically running on a separate server, the actual SSH server
  contacting the MasterPortal for the list of keys and the credential store for
  obtaining the proxies.
  Managed via separate sshhost.yml playbook.


Prerequisites
-------------------------------------------------------------------------------

	1. You need to have host certificates ready for this deployment. Place
	   your PEM formatted  certificate and key file under the
	   '*.PLACEHOLDER' files in the 'roles/basic/files/' directory. The
	   basic role will take care of deploying these into the target machine.
	   It is assumed that your host certificates are issued by 'TERENA
	   eScience SSL CA 3'. If not, you will have to make some modifications
	   to these scripts before executing them!

	2. Make sure you have replaced all the relevant .war and .jar
	   .PLACEHOLDER files in 'roles/masterportal/files/' replaced with the
	   actual files. See
	       https://github.com/rcauth-eu/aarc-master-portal
	       https://github.com/rcauth-eu/aarc-vo-portal
	       https://github.com/rcauth-eu/aarc-ssh-portal
	       https://github.com/rcauth-eu/keyutil
	   for details

	3. You need to create a JSON Web Keys file.
	   - Create a dummy config file:
	      echo '<config>\n<service/>\n</config>' > tmp.conf
	   - Run the oa2-cli tool locally:
	      java -jar ./roles/masterportal/files/oa2-cli.jar -cfg tmp.conf
	   - Choose "use keys" then run "create"
	   - Choose as filename './roles/masterportal/files/mp.jwk'
	   - exit the commandline tool (enter 'exit' twice)
	   - remove the 'tmp.conf' and 'log.xml' files
	   Lookup the 'kid' in the created file, use e.g. the RS256 key and
	   enter the value as 'mp_server_jwk_key_id' in 'masterportal_env.yml'

	4. You need to create the passphrases for the different components.
	   This can be done using the secrets.yml playbook.
	   Note that you also will have to fill in the client ID and Secret for
	   the VO-portal and/or SSH keys portal (when applicable). They can
	   obviously only be obtained once the MasterPortal has been installed.


How to use these scripts?
-------------------------------------------------------------------------------

Before you begin executing plays make sure to decide whether you're deployment
will use two separate hosts for Master Portal and Credential Store, or a single
host. Fill in you machine hostname[s] into the 'hosts.inventory' file
accordingly. The hostname[s] set in the invertory files will be set on the
target machine[s].

There are three different plays you can execute. One for the Credential Store
called 'credstore.yml', one for the SSH host call 'sshhost.yml' and one for the
Master Portal called 'masterportal.yml'.
All three plays include the basic role, which takes care of setting up the
environment for these components. 

Make sure to check recommanded modifications below before starting each play!
In case of single host deployments, execute 'credstore.yml' first,
then 'sshhost.yml' and then 'masterportal.yml' last.

1. credstore.yml

	a. Fill in required environment variables

	   This play will configure the Credential Server host. Basically, it
	   provides a MyProxy Server installation with some configuration.
	   Before starting this play there are a couple important variables you
	   should override. You can find these and their explanation in
	   'credstore_env.yml'.

	b. Provide Online CA tar file

	   MyProxy only stores credentials that it can verify, therefore it's
	   very important to have the Online CA (which will issue user
	   certificates) present in the trusted certificates directory (usually
	   /etc/grid-security/certificates). Make a tarball from the Online CA
	   in pem format, together with subject_hash links and signing_policy.
	   Do not forget the signing policy, since MyProxy will not work without
	   it. The result tarball should contain these files at the top level,
	   without any direcotry structure, and it should be places under
	   'roles/credstore/files/'


2. sshhost.yml

	a. Fill in the required environment variables

	   Before executing this play, make sure to fill in the required
	   variables listed and explained in the 'sshhost_env.yml' file.

3. masterportal.yml

	a. Fill in the required environment variables

	   Before executing this play, make sure to fill in the required
	   variables listed and explained in the 'masterportal_env.yml' file.
	   Look into the masterportal_env.yml.tamplate for a list of variables
	   you have to override. 

	b. Verify deploying war files

	   This play is about to deploy the Master Portal war files
	   (mp-oa2-client.war and mp-oa2-server.war) and optionally the VO
	   Portal war file (vo-portal.war). Make sure that these are present in
	   your 'role/masterportal/files' directory. 

	c. Tweak iptables rules

	   There is a simple set of iptable rules being deployed by this play.
	   Feel free to customize this to the needs of your infrastructure. Make
	   sure to leave port 443 accessible. The iptables file can be found in
	   'role/masterportal/files'
 
