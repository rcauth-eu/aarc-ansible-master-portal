/*
   This script will create the tables for a basic oa4mp install. Since MySQL has *no* varaible
   support, everything is hard-coded. if you want something other than the default names and 
   then edit the file.
*/

/*
Usage: Log in as an administrator (such as root) that can create the user, if need be.

CREATE USER '{{ mp_server_db_user }}'@'localhost' IDENTIFIED BY '{{ mp_server_db_pw }}';

Run the rest of this script. The user must exist before permissions are granted.
*/

/* User is created by the ansibel script */
/* CREATE USER '{{ mp_server_db_user }}'@'localhost' IDENTIFIED BY '{{ mp_server_db_pw }}'; */

CREATE DATABASE IF NOT EXISTS {{ mp_server_db }}
DEFAULT CHARACTER SET utf8;
USE {{ mp_server_db }};

/*
Some useful commands. Lst two list users and will show permissions for a single user on a machine.:
 Show Databases;
 Show schemas;
 SELECT User FROM mysql.user;
 SHOW GRANTS FOR 'user'@'localhost';
 */

CREATE TABLE {{ mp_server_db }}.clients (
  client_id     VARCHAR(255) PRIMARY KEY,
  public_key    TEXT,
  name          TEXT,
  home_url      TEXT,
  error_url     TEXT,
  email         TEXT,
  proxy_limited BOOLEAN,
  creation_ts   TIMESTAMP,
  rt_lifetime bigint,
  callback_uri  TEXT
);

CREATE TABLE {{ mp_server_db }}.client_approvals (
  client_id   VARCHAR(255) PRIMARY KEY,
  approver    TEXT,
  approved    BOOLEAN,
  approval_ts TIMESTAMP
);

CREATE TABLE {{ mp_server_db }}.transactions (
  temp_token          		VARCHAR(255) PRIMARY KEY,
  temp_token_valid    		BOOLEAN,
  callback_uri        		TEXT,
  certreq             		TEXT,
  certlifetime        		BIGINT,
  client_id           		TEXT,
  verifier_token      		TEXT,
  access_token        		TEXT,
  refresh_token       		TEXT,
  refresh_token_valid 		BOOLEAN,
  expires_in          		BIGINT,
  certificate         		TEXT,
  username            		TEXT,
  myproxyUsername     		TEXT,
  access_token_valid 		TINYINT(1) DEFAULT NULL,
  auth_time 			TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  nonce 			TEXT,
  scopes 			TEXT,
  claims              		TEXT CHARACTER SET 'utf8',
  mp_client_session_identifier  TEXT,
  UNIQUE INDEX verifier (verifier_token(255)),
  UNIQUE INDEX accessToken (access_token(255)),
  UNIQUE INDEX refreshToken (refresh_token(255)),
  UNIQUE INDEX username (username(255),access_token(255))
);

COMMIT;
/* Now to grant restricted access. The  tables have to exist before this step */

GRANT ALL ON {{ mp_server_db }}.client_approvals
        TO '{{ mp_server_db_user }}'@'localhost'
        IDENTIFIED BY '{{ mp_server_db_pw }}';

GRANT ALL ON {{ mp_server_db }}.clients
        TO '{{ mp_server_db_user }}'@'localhost'
        IDENTIFIED BY '{{ mp_server_db_pw }}';

GRANT ALL ON {{ mp_server_db }}.callbacks
        TO '{{ mp_server_db_user }}'@'localhost'
        IDENTIFIED BY '{{ mp_server_db_pw }}';

GRANT ALL ON {{ mp_server_db }}.transactions
        TO '{{ mp_server_db_user }}'@'localhost'
        IDENTIFIED BY '{{ mp_server_db_pw }}';

commit;
